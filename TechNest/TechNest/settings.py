"""
Django settings for TechNest project.

Generated by 'django-admin startproject' using Django 5.2.4.

For more information on this file, see
https://docs.djangoproject.com/en/5.2/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/5.2/ref/settings/
"""
from datetime import timedelta
from pathlib import Path
import os
import cloudinary
from django.urls import reverse_lazy
from django.utils.translation import gettext_lazy as _
# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent
from django.templatetags.static import static

from dotenv import load_dotenv
load_dotenv()


# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'django-insecure-dm60fy80nxvu0d7q5f(e%kk7bx-src4e+m*z%bc)byh=q9x*38'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = [
    "192.168.1.3",
     "localhost",
     "127.0.0.1",
     "10.133.216.48",
     "10.189.114.102",
     "10.189.114.149",
     "a5b3c0371cc8.ngrok-free.app",
     "192.168.73.13"
]

USE_TZ = False
TIME_ZONE = "Asia/Ho_Chi_Minh"


# Application definition


STATICFILES_DIRS = [
    BASE_DIR / "static",  # nếu có thư mục static trong dự án
]

STATIC_ROOT = BASE_DIR / "staticfiles"  # để collectstatic khi deploy

INSTALLED_APPS = [
    "unfold",
    "unfold.contrib.inlines",
    "unfold.contrib.filters",  # Bộ lọc nâng cao (không bắt buộc)
    "unfold.contrib.forms",  # Form nâng cao (không bắt buộc)
    
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    
    # 
    # "corsheaders",
    "drf_yasg",
    "rest_framework",
    "oauth2_provider",
    # Cac component he thong
    'accounts.apps.AccountsConfig',
    'products.apps.ProductsConfig',
    'locations.apps.LocationsConfig',
    'checkout.apps.CheckoutConfig'
]

CORS_ALLOW_ALL_ORIGINS = True

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    # 'corsheaders.middleware.CorsMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
    # 'debug_toolbar.middleware.DebugToolbarMiddleware',
    
]

ROOT_URLCONF = 'TechNest.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
         "DIRS": [BASE_DIR / "templates"], 
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'TechNest.wsgi.application'


# Database
# https://docs.djangoproject.com/en/5.2/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.mysql',
        'NAME': 'saledevicedb01',
        'USER': 'root',
        'PASSWORD': 'VuTrongTin12092004@',
        'HOST': 'localhost', 
        "PORT":'3306'
    }
}



AUTH_USER_MODEL='accounts.User'
# Password validation
# https://docs.djangoproject.com/en/5.2/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]

     
INTERNAL_IPS = [ "192.168.1.3","127.0.0.1","10.133.216.48","10.189.114.102","10.189.114.149","192.168.73.13"]



# Internationalization
# https://docs.djangoproject.com/en/5.2/topics/i18n/

LANGUAGE_CODE = 'en-us'


USE_I18N = True



# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/5.2/howto/static-files/

STATIC_URL = 'static/'

STATICFILES_DIRS = [
    BASE_DIR / "static",  # Đường dẫn đến thư mục static của dự án
]

# Default primary key field type
# https://docs.djangoproject.com/en/5.2/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'

REST_FRAMEWORK = {
    "DEFAULT_AUTHENTICATION_CLASSES": [
        "oauth2_provider.contrib.rest_framework.OAuth2Authentication",
    ],
}

SIMPLE_JWT = {
    "ACCESS_TOKEN_LIFETIME": timedelta(minutes=60),
    "REFRESH_TOKEN_LIFETIME": timedelta(days=7),
    "ROTATE_REFRESH_TOKENS": False,
    "BLACKLIST_AFTER_ROTATION": True,
    "ALGORITHM": "HS256",
    "SIGNING_KEY": SECRET_KEY,
    "AUTH_HEADER_TYPES": ("Bearer",),
    "USER_ID_FIELD": "id",
    "USER_ID_CLAIM": "user_id",
}

OAUTH2_PROVIDER = {
    "SCOPES": {"read": "Read scope", "write": "Write scope"},
    "ACCESS_TOKEN_EXPIRE_SECONDS": 3600,
    "GRANT_TYPES": ["password", "refresh_token", "authorization_code"],
}

cloudinary.config(
    cloud_name=os.getenv("CLOUNDINARY_NAME"),
    api_key=os.getenv("CLOUDINARY_API_KEY"),
    api_secret=os.getenv("CLOUDINARY_API_SECRET"),
    secure=True,
)

OAUTH2_PROVIDER = {
    "SCOPES": {"read": "Read scope", "write": "Write scope"},
    "ACCESS_TOKEN_EXPIRE_SECONDS": 3600,
    "GRANT_TYPES": ["password", "refresh_token", "authorization_code"],
}

MOMO_CONFIG = {
    "endpoint": "https://test-payment.momo.vn/v2/gateway/api/create",
    "accessKey": os.getenv("MOMO_ACCESS_KEY"),
    "secretKey": os.getenv("MOMO_SECRET_KEY"),
    "partnerCode": "MOMO",
    "redirectUrl": "http://127.0.0.1:8000/payments/return/",   
    "ipnUrl": "https://a5b3c0371cc8.ngrok-free.app/payments/ipn/",          
}


AKISMET_API_KEY = os.getenv("AKISMET_API_KEY_DEV")
BLOG_URL = os.getenv("BLOG_URL_DEV")
CLIENT_ID = os.getenv("OATUH2_CLIENT_ID")
CLIENT_SECRET = os.getenv("OATUH2_CLIENT_SECRET")
CELERY_BROKER_URL = "redis://localhost:6379/0"
CELERY_RESULT_BACKEND = "redis://localhost:6379/0"
FPT_API_KEY = os.getenv("FPT_API_KEY")
API_URL = "https://api.fpt.ai/vision/idr/vnm"
secret_key_str = os.getenv("CCCD_SECRET_KEY")
CCCD_SECRET_KEY = secret_key_str.encode("utf-8")
BLOCK_SIZE = 16


UNFOLD = {
    "SITE_TITLE": "TechNest Admin",
    "SITE_HEADER": "TechNest",
    "SITE_URL": "/",
    "SITE_ICON": None,
    "SIDEBAR": {
        "navigation": [
             {
                "title": _("Token Manager"),
                "icon": "token",
                "items": [
                    {
                        "title": _("Token Manager"),
                        "icon": "token",
                        "link": reverse_lazy("admin:index"),
                    },
                ],
            },
            {
                "title": _("Home"),
                "icon": "home",
                "items": [
                    {
                        "title": _("Dashboard"),
                        "icon": "dashboard",
                        "link": reverse_lazy("technest_admin:index"),
                    },
                ],
            },
             {
                "title": _("User Manager"),
                "separator": True,
                "items": [
                    {
                        "icon": "person",
                        "title": _("Users"),
                        "link": reverse_lazy("technest_admin:accounts_user_changelist"),
                    },
                    {
                        "icon": "person_add",
                        "title": _("Supplier approved"),
                        "link": reverse_lazy(
                            "technest_admin:accounts_supplierapproved_changelist"
                        ),
                    },
                ]
            },
            
            {
                "title": _("Product Attributes"),
                "separator": True,
                "items": [
                    {
                        "icon": "category",
                        "title": _("Category"),
                        "link": reverse_lazy("technest_admin:products_category_changelist"),
                    },
                    {
                        "icon": "add_shopping_cart", 
                        "title": _("Product"),
                        "link": reverse_lazy("technest_admin:products_product_changelist"),
                    }
                    
                ]
            },

            {
                "title": _("Logictic"),
                "separator": True,
                "items": [
                    {
                        "icon": "local_shipping",
                        "title": _("Logictic"),
                        "link": reverse_lazy("technest_admin:locations_shippingroute_changelist"),
                    },
                    # {
                    #     "icon": "add_shopping_cart", 
                    #     "title": _("Product"),
                    #     "link": reverse_lazy("technest_admin:locations_product_changelist"),
                    # }
                    
                ]
            }
           
            # Add more sections as needed
        ],
    },
    "STYLES": [
        lambda request: static("css/styles.css"),
    ],
    "COLORS": {
        "base": {
            "50": "249 250 251",
            "100": "243 244 246",
            "200": "229 231 235",
            "300": "209 213 219",
            "400": "156 163 175",
            "500": "107 114 128",
            "600": "75 85 99",
            "700": "55 65 81",
            "800": "31 41 55",
            "900": "17 24 39",
            "950": "3 7 18",
        },
        "primary": {
            "50": "250 245 255",
            "100": "206 250 254",
            "200": "162 244 253",
            "300": "83 234 253",
            "400": "0 211 242",
            "500": "0 184 219",
            "600": "0 146 184",
            "700": "0 117 149",
            "800": "0 95 120",
            "900": "16 78 100",
            "950": "5 51 69",
        },
    },
}